// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card Should match the snapshot if isFavorite is false 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    addBookList={[MockFunction]}
    isFavoite={false}
    loc=""
    removeBookList={[MockFunction]}
    result={
      Object {
        "Name": "Into the Wild",
        "wTeaser": "Into the Wild",
      }
    }
    sendSearch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "Into the Wild",
    "nodeType": "host",
    "props": Object {
      "children": Array [
        undefined,
        <button>
          <i
            className="far fa-bookmark"
            id="bookmark"
            onClick={[Function]}
            title="Must Read List"
          />
        </button>,
        <button
          className="search-btn"
          title="Find Similar"
        >
          <i
            className="fas fa-search"
            id="search"
            onClick={[Function]}
          />
        </button>,
        <h1>
          Into the Wild
        </h1>,
        <p>
          Into the Wild
        </p>,
      ],
      "className": "card",
    },
    "ref": null,
    "rendered": Array [
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="far fa-bookmark"
            id="bookmark"
            onClick={[Function]}
            title="Must Read List"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "far fa-bookmark",
            "id": "bookmark",
            "onClick": [Function],
            "title": "Must Read List",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="fas fa-search"
            id="search"
            onClick={[Function]}
          />,
          "className": "search-btn",
          "title": "Find Similar",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fas fa-search",
            "id": "search",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Into the Wild",
        },
        "ref": null,
        "rendered": "Into the Wild",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Into the Wild",
        },
        "ref": null,
        "rendered": "Into the Wild",
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "Into the Wild",
      "nodeType": "host",
      "props": Object {
        "children": Array [
          undefined,
          <button>
            <i
              className="far fa-bookmark"
              id="bookmark"
              onClick={[Function]}
              title="Must Read List"
            />
          </button>,
          <button
            className="search-btn"
            title="Find Similar"
          >
            <i
              className="fas fa-search"
              id="search"
              onClick={[Function]}
            />
          </button>,
          <h1>
            Into the Wild
          </h1>,
          <p>
            Into the Wild
          </p>,
        ],
        "className": "card",
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="far fa-bookmark"
              id="bookmark"
              onClick={[Function]}
              title="Must Read List"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "far fa-bookmark",
              "id": "bookmark",
              "onClick": [Function],
              "title": "Must Read List",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fas fa-search"
              id="search"
              onClick={[Function]}
            />,
            "className": "search-btn",
            "title": "Find Similar",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fas fa-search",
              "id": "search",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Into the Wild",
          },
          "ref": null,
          "rendered": "Into the Wild",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Into the Wild",
          },
          "ref": null,
          "rendered": "Into the Wild",
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Card Should match the snapshot if isFavorite is true 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    addBookList={[MockFunction]}
    isFavoite={false}
    loc=""
    removeBookList={[MockFunction]}
    result={
      Object {
        "Name": "Into the Wild",
        "wTeaser": "Into the Wild",
      }
    }
    sendSearch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "Into the Wild",
    "nodeType": "host",
    "props": Object {
      "children": Array [
        undefined,
        <button>
          <i
            className="far fa-bookmark"
            id="bookmark"
            onClick={[Function]}
            title="Must Read List"
          />
        </button>,
        <button
          className="search-btn"
          title="Find Similar"
        >
          <i
            className="fas fa-search"
            id="search"
            onClick={[Function]}
          />
        </button>,
        <h1>
          Into the Wild
        </h1>,
        <p>
          Into the Wild
        </p>,
      ],
      "className": "card",
    },
    "ref": null,
    "rendered": Array [
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="far fa-bookmark"
            id="bookmark"
            onClick={[Function]}
            title="Must Read List"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "far fa-bookmark",
            "id": "bookmark",
            "onClick": [Function],
            "title": "Must Read List",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <i
            className="fas fa-search"
            id="search"
            onClick={[Function]}
          />,
          "className": "search-btn",
          "title": "Find Similar",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fas fa-search",
            "id": "search",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Into the Wild",
        },
        "ref": null,
        "rendered": "Into the Wild",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Into the Wild",
        },
        "ref": null,
        "rendered": "Into the Wild",
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "Into the Wild",
      "nodeType": "host",
      "props": Object {
        "children": Array [
          undefined,
          <button>
            <i
              className="far fa-bookmark"
              id="bookmark"
              onClick={[Function]}
              title="Must Read List"
            />
          </button>,
          <button
            className="search-btn"
            title="Find Similar"
          >
            <i
              className="fas fa-search"
              id="search"
              onClick={[Function]}
            />
          </button>,
          <h1>
            Into the Wild
          </h1>,
          <p>
            Into the Wild
          </p>,
        ],
        "className": "card",
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="far fa-bookmark"
              id="bookmark"
              onClick={[Function]}
              title="Must Read List"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "far fa-bookmark",
              "id": "bookmark",
              "onClick": [Function],
              "title": "Must Read List",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <i
              className="fas fa-search"
              id="search"
              onClick={[Function]}
            />,
            "className": "search-btn",
            "title": "Find Similar",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fas fa-search",
              "id": "search",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Into the Wild",
          },
          "ref": null,
          "rendered": "Into the Wild",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Into the Wild",
          },
          "ref": null,
          "rendered": "Into the Wild",
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
